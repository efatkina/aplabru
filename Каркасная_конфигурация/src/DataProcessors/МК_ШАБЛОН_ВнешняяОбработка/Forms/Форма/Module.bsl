
#Область ПечатнаяФормаВызовКлиентскогоМетода

//&НаКлиенте
//Процедура Печать(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
//	
//	// Реализация логики команды
//	Если ИдентификаторКоманды = "ИдентификаторКоманды" Тогда
//	ИначеЕсли
//	КонецЕсли;
//	
//КонецПроцедуры

#КонецОбласти

#Область ДополнительнаяОбработкаВызовКлиентскогоМетода

//&НаКлиенте
//Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
//	
//	// Реализация логики команды
//	Если ИдентификаторКоманды = "ИдентификаторКоманды" Тогда
//	ИначеЕсли
//	КонецЕсли;
//	
//КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеОбъектаВызовКлиентскогоМетода

//&НаКлиенте
//Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
//	
//	// Реализация логики команды
//	Если ИдентификаторКоманды = "ИдентификаторКоманды" Тогда
//	ИначеЕсли
//	КонецЕсли;
//	
//КонецПроцедуры

#КонецОбласти

#Область СозданиеСвязанныхОбъектовВызовКлиентскогоМетода

//&НаКлиенте
//Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив, СозданныеОбъекты) Экспорт
//	
//	// Реализация логики команды
//	Если ИдентификаторКоманды = "ИдентификаторКоманды" Тогда
//	ИначеЕсли
//	КонецЕсли;
//	
//КонецПроцедуры

#КонецОбласти



#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Добавление информации о разработчике
	ДобавитьИнформациюОРазработчике();
	
	
	//// ПечатнаяФорма, ЗаполнениеОбъекта, СозданиеСвязанныхОбъектов
	//// ОткрытиеФормы
	//Если Параметры.Свойство("ОбъектыНазначения") Тогда
	//	ЭтаФорма.ОбъектыНазначения = Параметры.ОбъектыНазначения;
	//КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
//Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИмяТаблицыФормы
//Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
//Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//Код процедур и функций
#КонецОбласти



#Область ИнформацияОРазработчике

#Область Сервер

// Добавляет на форму информацию о разработчике
// 
//  Вызов процедуры необходимо разместить в процедуре ПриСозданииНаСервере
//
&НаСервере
Процедура ДобавитьИнформациюОРазработчике()
		
	// ПАРАМЕТРЫ ОТОБРАЖЕНИЯ ИНФОРМАЦИИ О РАЗРАБОТЧИКЕ
	
	ПараметрыИнформацииОРазработчике = Новый Структура;
	ПараметрыИнформацииОРазработчике.Вставить("Элемент", Элементы.ОсновнаяКоманднаяПанель); // Элемент формы. Элемент формы, перед которым будет добавлена информация о разработчике.
	ПараметрыИнформацииОРазработчике.Вставить("ИмяОсновногоРеквизитаФормы", "Объект"); // Строка. Имя основного реквизита формы (Объект, Отчет и пр.)
	ПараметрыИнформацииОРазработчике.Вставить("ЭтоВнешняяОбработкаОтчет", Истина); // Булево. Если это внешняя обработка или отчет, картинки логотипа размещены в объекте, иначе картинки логотипа беруться из конфигурации
	
	ПараметрыИнформацииОРазработчике.Вставить("ДобавлятьИнформациюОРазработчике", Истина); // Булево. Добавлять на форму информацию о разработчике
	ПараметрыИнформацииОРазработчике.Вставить("ДобавлятьПодробнуюИнформациюОРазработчике", Истина); // Булево. Добавлять на форму подробную информацию о разработчике
	ПараметрыИнформацииОРазработчике.Вставить("ПоказыватьПодробнуюИнформациюОРазработчикеПриОткрытии", Ложь); // Булево. Всегда показывать подробную информацию о разработчике при открытии
	
	// ИНФОРМАЦИЯ О РАЗРАБОТЧИКЕ
	
	ИнформацияОРазработчике = Новый Структура;
	ИнформацияОРазработчике.Вставить("Наименование", "Проекты автоматизации бизнеса (ap-lab.ru)");
	ИнформацияОРазработчике.Вставить("Сайт", "ap-lab.ru");
	ИнформацияОРазработчике.Вставить("Телефон", "+7 (499) 350-34-56");
	ИнформацияОРазработчике.Вставить("ЭлектроннаяПочта", "support@ap-lab.ru");
	
	// ДОБАВЛЕНИЕ ИНФОРМАЦИИ О РАЗРАБОТЧИКЕ
	Если ПараметрыИнформацииОРазработчике.ДобавлятьИнформациюОРазработчике Тогда
		
		ДобавитьИЗаполнитьРеквизитыФормы(ПараметрыИнформацииОРазработчике, ИнформацияОРазработчике);
		
		ДобавитьКраткуюИнформациюОРазработчике(ПараметрыИнформацииОРазработчике);
		
		Если ПараметрыИнформацииОРазработчике.ДобавлятьПодробнуюИнформациюОРазработчике Тогда
			ДобавитьПодробнуюИнформациюОРазработчике(ПараметрыИнформацииОРазработчике);
		КонецЕсли;
		
	КонецЕсли; 
					
КонецПроцедуры

&НаСервере
Процедура ДобавитьИЗаполнитьРеквизитыФормы(ПараметрыИнформацииОРазработчике, ИнформацияОРазработчике)
	
	// Добавление реквизитов формы
	ДобавляемыеРеквизиты = Новый Массив;
	
	РеквизитРазработчикНаименование = 		Новый РеквизитФормы("РазработчикНаименование", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(РеквизитРазработчикНаименование);
	
	РеквизитРазработчикСайт = 				Новый РеквизитФормы("РазработчикСайт", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(РеквизитРазработчикСайт);
	
	РеквизитРазработчикТелефон = 			Новый РеквизитФормы("РазработчикТелефон", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(РеквизитРазработчикТелефон);
	
	РеквизитРазработчикЭлектроннаяПочта = 	Новый РеквизитФормы("РазработчикЭлектроннаяПочта", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(РеквизитРазработчикЭлектроннаяПочта);
		
	РеквизитРазработчикЛоготипМалый = 		Новый РеквизитФормы("РазработчикЛоготипМалый", Новый ОписаниеТипов("Строка"));
	ДобавляемыеРеквизиты.Добавить(РеквизитРазработчикЛоготипМалый);
	
	Если ПараметрыИнформацииОРазработчике.ДобавлятьПодробнуюИнформациюОРазработчике Тогда
		РеквизитРазработчикЛоготипОсновной = 	Новый РеквизитФормы("РазработчикЛоготипОсновной", Новый ОписаниеТипов("Строка"));
		ДобавляемыеРеквизиты.Добавить(РеквизитРазработчикЛоготипОсновной);
	КонецЕсли;
	
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	// Заполнение реквизитов формы
	ЭтаФорма.РазработчикНаименование = 		ИнформацияОРазработчике.Наименование;
	ЭтаФорма.РазработчикСайт = 				ИнформацияОРазработчике.Сайт;
	ЭтаФорма.РазработчикТелефон = 			ИнформацияОРазработчике.Телефон;
	ЭтаФорма.РазработчикЭлектроннаяПочта = 	ИнформацияОРазработчике.ЭлектроннаяПочта;
	
	// Получение картинок логотипа
	Если ПараметрыИнформацииОРазработчике.ЭтоВнешняяОбработкаОтчет Тогда
		МодульОбъекта = РеквизитФормыВЗначение(ПараметрыИнформацииОРазработчике.ИмяОсновногоРеквизитаФормы);
		ЛоготипДвоичныеДанные = МодульОбъекта.ПолучитьМакет("ЛоготипВнешняяОбработкаМалый");
		ЛоготипКартинка = Новый Картинка(ЛоготипДвоичныеДанные);
	Иначе
		ЛоготипКартинка = БиблиотекаКартинок.МК_ЛоготипПодсистемаМалый;	
	КонецЕсли;
	
	ЭтаФорма.РазработчикЛоготипМалый = ПоместитьВоВременноеХранилище(ЛоготипКартинка, ЭтаФорма.УникальныйИдентификатор);
	
	Если ПараметрыИнформацииОРазработчике.ДобавлятьПодробнуюИнформациюОРазработчике Тогда
		
		Если ПараметрыИнформацииОРазработчике.ЭтоВнешняяОбработкаОтчет Тогда
			ЛоготипДвоичныеДанные = МодульОбъекта.ПолучитьМакет("ЛоготипВнешняяОбработкаОсновной");
			ЛоготипКартинка = Новый Картинка(ЛоготипДвоичныеДанные);
		Иначе
			ЛоготипКартинка = БиблиотекаКартинок.МК_ЛоготипМалый;
		КонецЕсли;
		
		ЭтаФорма.РазработчикЛоготипОсновной = ПоместитьВоВременноеХранилище(ЛоготипКартинка, ЭтаФорма.УникальныйИдентификатор);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДобавитьКраткуюИнформациюОРазработчике(ПараметрыИнформацииОРазработчике)
	
	// ДОБАВЛЕНИЕ КРАТКОЙ ИНФОРМАЦИИ О РАЗРАБОТЧИКЕ
	
	// Добавление элементов формы
	// Добавление группы Краткая информация о разработчике
	ЭлементГруппаКраткаяИнформацияОРазработчике = Элементы.Вставить("ГруппаКраткаяИнформацияОРазработчике", Тип("ГруппаФормы"), ЭтаФорма, ПараметрыИнформацииОРазработчике.Элемент); 
	ЭлементГруппаКраткаяИнформацияОРазработчике.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаКраткаяИнформацияОРазработчике.Заголовок = "Краткая информация о разработчике";
	ЭлементГруппаКраткаяИнформацияОРазработчике.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ЭлементГруппаКраткаяИнформацияОРазработчике.ОтображатьЗаголовок = Ложь;
	ЭлементГруппаКраткаяИнформацияОРазработчике.ГоризонтальноеПоложениеПодчиненных = ГоризонтальноеПоложениеЭлемента.Право;
	ЭлементГруппаКраткаяИнформацияОРазработчике.РастягиватьПоГоризонтали = Истина;
			
	// Добавление декораций
	ЭлементРазработчикНадпись = Элементы.Вставить("РазработчикНадпись", Тип("ДекорацияФормы"), ЭлементГруппаКраткаяИнформацияОРазработчике);
	ЭлементРазработчикНадпись.Заголовок = "Разработчик: ";
	ЭлементРазработчикНадпись.РастягиватьПоГоризонтали = Истина;
	ЭлементРазработчикНадпись.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	ЭлементРазработчикНадпись.ЦветТекста = Новый Цвет(28, 85, 174); 
	
	// Добавление логотипа
	ЭлементРазработчикЛоготипМалый = Элементы.Вставить("РазработчикЛоготипМалый", Тип("ПолеФормы"), ЭлементГруппаКраткаяИнформацияОРазработчике); 
	ЭлементРазработчикЛоготипМалый.Вид = ВидПоляФормы.ПолеКартинки;
	ЭлементРазработчикЛоготипМалый.Заголовок = "Логотип малый";
	ЭлементРазработчикЛоготипМалый.ПутьКДанным = "РазработчикЛоготипМалый";
	ЭлементРазработчикЛоготипМалый.ТекстНевыбраннойКартинки = "Логотип";
	ЭлементРазработчикЛоготипМалый.Гиперссылка = Истина;
	ЭлементРазработчикЛоготипМалый.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементРазработчикЛоготипМалый.РастягиватьПоВертикали = Ложь;
	ЭлементРазработчикЛоготипМалый.РастягиватьПоГоризонтали = Ложь;
	ЭлементРазработчикЛоготипМалый.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
	ЭлементРазработчикЛоготипМалый.Ширина = 3; 
	ЭлементРазработчикЛоготипМалый.Высота = 1;
	ЭлементРазработчикЛоготипМалый.УстановитьДействие("Нажатие", "РазработчикЛоготипМалыйНажатие");
	
	// Добавление декораций
	ЭлементРазработчикЗначение = Элементы.Вставить("РазработчикЗначение", Тип("ДекорацияФормы"), ЭлементГруппаКраткаяИнформацияОРазработчике);
	ЭлементРазработчикЗначение.Заголовок = ЭтаФорма.РазработчикНаименование;
	ЭлементРазработчикЗначение.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Лево;
	ЭлементРазработчикЗначение.Гиперссылка = Истина;
	ЭлементРазработчикЗначение.УстановитьДействие("Нажатие", "РазработчикЗначениеНажатие");
	
	// Добавление команды отображения подробной информации о разработчике
	Если ПараметрыИнформацииОРазработчике.ДобавлятьПодробнуюИнформациюОРазработчике Тогда 
		
		КомандаРазработчикПодробнее = ЭтаФорма.Команды.Добавить("РазработчикПодробнее");
		КомандаРазработчикПодробнее.Действие = "РазработчикПодробнее";
		КомандаРазработчикПодробнее.Заголовок = "Подробнее";
		КомандаРазработчикПодробнее.Отображение = ОтображениеКнопки.КартинкаИТекст;
		
		ЭлементРазработчикПодробнее = Элементы.Вставить("РазработчикПодробнее", Тип("КнопкаФормы"), ЭлементГруппаКраткаяИнформацияОРазработчике);
		ЭлементРазработчикПодробнее.Вид = ВидКнопкиФормы.Гиперссылка;
		ЭлементРазработчикПодробнее.ИмяКоманды = "РазработчикПодробнее";
		ЭлементРазработчикПодробнее.Картинка = ?(ПараметрыИнформацииОРазработчике.ПоказыватьПодробнуюИнформациюОРазработчикеПриОткрытии, БиблиотекаКартинок.ПереместитьВверх, БиблиотекаКартинок.ПереместитьВниз);
		ЭлементРазработчикПодробнее.Ширина = 9;
		
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура ДобавитьПодробнуюИнформациюОРазработчике(ПараметрыИнформацииОРазработчике)
	
	// ДОБАВЛЕНИЕ ПОДРОБНОЙ ИНФОРМАЦИИ О РАЗРАБОТЧИКЕ
	
	// Добавление элементов формы
	// Добавление группы Подробная информация о разработчике
	ЭлементГруппаПодробнаяИнформацияОРазработчике = Элементы.Вставить("ГруппаПодробнаяИнформацияОРазработчике", Тип("ГруппаФормы"), ЭтаФорма, ПараметрыИнформацииОРазработчике.Элемент); 
	ЭлементГруппаПодробнаяИнформацияОРазработчике.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаПодробнаяИнформацияОРазработчике.Заголовок = "Подробная информация о разработчике";
	ЭлементГруппаПодробнаяИнформацияОРазработчике.ОтображатьЗаголовок = Ложь;
	ЭлементГруппаПодробнаяИнформацияОРазработчике.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ЭлементГруппаПодробнаяИнформацияОРазработчике.Отображение = ОтображениеОбычнойГруппы.Нет;
	ЭлементГруппаПодробнаяИнформацияОРазработчике.ШиринаПодчиненныхЭлементов = ШиринаПодчиненныхЭлементовФормы.Авто;
	ЭлементГруппаПодробнаяИнформацияОРазработчике.Видимость = ПараметрыИнформацииОРазработчике.ПоказыватьПодробнуюИнформациюОРазработчикеПриОткрытии;
	ЭлементГруппаПодробнаяИнформацияОРазработчике.ГоризонтальноеПоложениеПодчиненных = ГоризонтальноеПоложениеЭлемента.Право;
	ЭлементГруппаПодробнаяИнформацияОРазработчике.РастягиватьПоГоризонтали = Истина;
	
	// Добавление группы Информация о разработчике
	ЭлементГруппаИнформацияОРазработчике = Элементы.Вставить("ГруппаИнформацияОРазработчике", Тип("ГруппаФормы"), ЭлементГруппаПодробнаяИнформацияОРазработчике); 
	ЭлементГруппаИнформацияОРазработчике.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаИнформацияОРазработчике.Заголовок = "Информация о разработчике";
	ЭлементГруппаИнформацияОРазработчике.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ЭлементГруппаИнформацияОРазработчике.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
	
	// Добавление логотипа
	ЭлементРазработчикЛоготипОсновной = Элементы.Вставить("РазработчикЛоготипОсновной", Тип("ПолеФормы"), ЭлементГруппаИнформацияОРазработчике); 
	ЭлементРазработчикЛоготипОсновной.Вид = ВидПоляФормы.ПолеКартинки;
	ЭлементРазработчикЛоготипОсновной.Заголовок = "Логотип основной";
	ЭлементРазработчикЛоготипОсновной.ПутьКДанным = "РазработчикЛоготипОсновной";
	ЭлементРазработчикЛоготипОсновной.ТекстНевыбраннойКартинки = "Логотип";
	ЭлементРазработчикЛоготипОсновной.Гиперссылка = Истина;
	ЭлементРазработчикЛоготипОсновной.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементРазработчикЛоготипОсновной.РастягиватьПоВертикали = Ложь;
	ЭлементРазработчикЛоготипОсновной.РастягиватьПоГоризонтали = Ложь;
	ЭлементРазработчикЛоготипОсновной.Ширина = 22; 
	ЭлементРазработчикЛоготипОсновной.Высота = 4;
	ЭлементРазработчикЛоготипОсновной.УстановитьДействие("Нажатие", "РазработчикЛоготипОсновнойНажатие");
	
	// Добавление группы Контактная информация
	ЭлементГруппаКонтактнаяИнформация = Элементы.Вставить("ГруппаКонтактнаяИнформация", Тип("ГруппаФормы"), ЭлементГруппаИнформацияОРазработчике);
	ЭлементГруппаКонтактнаяИнформация.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаКонтактнаяИнформация.Заголовок = "Контактная информация";
	ЭлементГруппаКонтактнаяИнформация.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	ЭлементГруппаКонтактнаяИнформация.ОтображатьЗаголовок = Ложь;
	ЭлементГруппаКонтактнаяИнформация.РастягиватьПоВертикали = Ложь;
	ЭлементГруппаКонтактнаяИнформация.РастягиватьПоГоризонтали = Ложь;
	
	// Добавление групп контактов
	ЭлементГруппаСайт = Элементы.Вставить("ГруппаСайт", Тип("ГруппаФормы"), ЭлементГруппаКонтактнаяИнформация);
	ЭлементГруппаСайт.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаСайт.Заголовок = "Сайт";
	ЭлементГруппаСайт.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ЭлементГруппаСайт.Отображение = ОтображениеОбычнойГруппы.Нет;
	ЭлементГруппаСайт.ОтображатьЗаголовок = Ложь;
	ЭлементГруппаТелефон = Элементы.Вставить("ГруппаТелефон", Тип("ГруппаФормы"), ЭлементГруппаКонтактнаяИнформация);
	ЭлементГруппаТелефон.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаТелефон.Заголовок = "Телефон";
	ЭлементГруппаТелефон.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ЭлементГруппаТелефон.Отображение = ОтображениеОбычнойГруппы.Нет;
	ЭлементГруппаТелефон.ОтображатьЗаголовок = Ложь;
	ЭлементГруппаЭлектроннаяПочта = Элементы.Вставить("ГруппаЭлектроннаяПочта", Тип("ГруппаФормы"), ЭлементГруппаКонтактнаяИнформация);
	ЭлементГруппаЭлектроннаяПочта.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаЭлектроннаяПочта.Заголовок = "Электронная почта";
	ЭлементГруппаЭлектроннаяПочта.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ЭлементГруппаЭлектроннаяПочта.Отображение = ОтображениеОбычнойГруппы.Нет;
	ЭлементГруппаЭлектроннаяПочта.ОтображатьЗаголовок = Ложь;
		
	// Добавление декораций
	ЭлементСайтНадпись = Элементы.Вставить("СайтНадпись", Тип("ДекорацияФормы"), ЭлементГруппаСайт);
	ЭлементСайтНадпись.Заголовок = "Сайт:";
	ЭлементСайтНадпись.Ширина = 8;
	ЭлементСайтНадпись.ЦветТекста = Новый Цвет(28, 85, 174); 
	
	ЭлементСайтЗначение = Элементы.Вставить("СайтЗначение", Тип("ДекорацияФормы"), ЭлементГруппаСайт);
	ЭлементСайтЗначение.Заголовок = ЭтаФорма.РазработчикСайт;
	ЭлементСайтЗначение.Гиперссылка = Истина;
	ЭлементСайтЗначение.Ширина = 12;
	ЭлементСайтЗначение.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	ЭлементСайтЗначение.УстановитьДействие("Нажатие", "СайтЗначениеНажатие");
	
	ЭлементТелефонНадпись = Элементы.Вставить("ТелефонНадпись", Тип("ДекорацияФормы"), ЭлементГруппаТелефон);
	ЭлементТелефонНадпись.Заголовок = "Телефон:";
	ЭлементТелефонНадпись.Ширина = 8;
	ЭлементТелефонНадпись.ЦветТекста = Новый Цвет(28, 85, 174); 
	
	ЭлементТелефонЗначение = Элементы.Вставить("ТелефонЗначение", Тип("ДекорацияФормы"), ЭлементГруппаТелефон); 
	ЭлементТелефонЗначение.Заголовок = ЭтаФорма.РазработчикТелефон;
	ЭлементТелефонЗначение.Гиперссылка = Истина;
	ЭлементТелефонЗначение.Ширина = 12;
	ЭлементТелефонЗначение.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	ЭлементТелефонЗначение.ЦветТекста = Новый Цвет(28, 85, 174);
	ЭлементТелефонЗначение.УстановитьДействие("Нажатие", "ТелефонЗначениеНажатие");
	
	ЭлементЭлектроннаяПочтаНадпись = Элементы.Вставить("ЭлектроннаяПочтаНадпись", Тип("ДекорацияФормы"), ЭлементГруппаЭлектроннаяПочта); 	
	ЭлементЭлектроннаяПочтаНадпись.Заголовок = "E-mail:";
	ЭлементЭлектроннаяПочтаНадпись.Ширина = 8;
	ЭлементЭлектроннаяПочтаНадпись.ЦветТекста = Новый Цвет(28, 85, 174); 
	
	ЭлементЭлектроннаяПочтаЗначение = Элементы.Вставить("ЭлектроннаяПочтаЗначение", Тип("ДекорацияФормы"), ЭлементГруппаЭлектроннаяПочта); 
	ЭлементЭлектроннаяПочтаЗначение.Заголовок = ЭтаФорма.РазработчикЭлектроннаяПочта;
	ЭлементЭлектроннаяПочтаЗначение.Гиперссылка = Истина;
	ЭлементЭлектроннаяПочтаЗначение.Ширина = 12;
	ЭлементЭлектроннаяПочтаЗначение.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Право;
	ЭлементЭлектроннаяПочтаЗначение.УстановитьДействие("Нажатие", "ЭлектроннаяПочтаЗначениеНажатие");
			
КонецПроцедуры

#КонецОбласти

#Область Клиент

&НаКлиенте
Процедура РазработчикЛоготипМалыйНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПерейтиПоНавигационнойСсылке("http://" + ЭтаФорма.РазработчикСайт);
КонецПроцедуры

&НаКлиенте
Процедура РазработчикЛоготипОсновнойНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПерейтиПоНавигационнойСсылке("http://" + ЭтаФорма.РазработчикСайт);
КонецПроцедуры

&НаКлиенте
Процедура СайтЗначениеНажатие(Элемент)
	ПерейтиПоНавигационнойСсылке("http://" + ЭтаФорма.РазработчикСайт);
КонецПроцедуры

&НаКлиенте
Процедура ТелефонЗначениеНажатие(Элемент)
	
	НомерТелефона = Элементы.ТелефонЗначение.Заголовок;
	ЗаменяемыеСимволы = "()_- ";
	СимволыЗамены ="";
	Для НомерСимвола = 1 По СтрДлина(ЗаменяемыеСимволы) Цикл
		НомерТелефона = СтрЗаменить(НомерТелефона, Сред(ЗаменяемыеСимволы, НомерСимвола, 1), Сред(СимволыЗамены, НомерСимвола, 1));
	КонецЦикла;
	
	ИмяПротокола = "tel";
	
	СтрокаЗапуска = ИмяПротокола + ":" + НомерТелефона;
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗапускаПриложения", ЭтотОбъект);
	НачатьЗапускПриложения(Оповещение, СтрокаЗапуска);
		
КонецПроцедуры

Процедура ПослеЗапускаПриложения(ВыбранныйЭлемент, Параметры) Экспорт
	// Процедура заглушка, т.к. НачатьЗапускПриложения требуется наличие обработчика оповещения.
КонецПроцедуры

&НаКлиенте
Процедура ЭлектроннаяПочтаЗначениеНажатие(Элемент)
	
	ТемаПисьма = "Тема письма";
	ТекстПисьма = "Текст письма";
	СтрокаКоманды = "mailto:" + Элементы.ЭлектроннаяПочтаЗначение.Заголовок + "?subject=" + ТемаПисьма + "&body=" + ТекстПисьма;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьЗапускПриложенияЗавершение", ЭтаФорма);
	
	НачатьЗапускПриложения(ОписаниеОповещения, СтрокаКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура РазработчикЗначениеНажатие(Элемент)
	ПерейтиПоНавигационнойСсылке("http://" + ЭтаФорма.РазработчикСайт);
КонецПроцедуры

&НаКлиенте
Процедура РазработчикПодробнее(Команда)
	
	Элементы.ГруппаПодробнаяИнформацияОРазработчике.Видимость = НЕ Элементы.ГруппаПодробнаяИнформацияОРазработчике.Видимость;
	Элементы.РазработчикПодробнее.Картинка = ?(Элементы.ГруппаПодробнаяИнформацияОРазработчике.Видимость, БиблиотекаКартинок.ПереместитьВверх, БиблиотекаКартинок.ПереместитьВниз);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗапускПриложенияЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти
